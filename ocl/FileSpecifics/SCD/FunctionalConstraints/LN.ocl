/*
*************************************************************************
**  Copyright (c) 2016-2022 CentraleSupélec & EDF.
**  All rights reserved. This program and the accompanying materials
**  are made available under the terms of the Eclipse Public License v2.0
**  which accompanies this distribution, and is available at
**  https://www.eclipse.org/legal/epl-v20.html
** 
**  This file is part of the RiseClipse tool
**  
**  Contributors:
**      Computer Science Department, CentraleSupélec
**      EDF R&D
**  Contacts:
**      dominique.marcadet@centralesupelec.fr
**      aurelie.dehouck-neveu@edf.fr
**  Web site:
**      https://riseclipse.github.io/
*************************************************************************
*/

import scl: 'http://www.iec.ch/61850/2003/SCL'

package scl

context LN
    
    -- If there is a LN.lnClass = RREC, there must be a XCBR in the same LDevice
    --inv RREC_implies_XCBR_in_LN
    --( 'LN.lnClass = RREC implies there is a LN.lnClass = XCBR in the same LDevice (line ' + self.lineNumber.toString() + ')' )
    --:
    --    self.lnClass = 'RREC' implies self.ParentLDevice.LN -> exists(l:LN | l.lnClass = 'XCBR' )
        
    -- If there is a LN.lnClass = RBRF, there must be a XCBR in the same LDevice
    --inv RBRF_implies_XCBR_in_LN
    --( 'LN.lnClass = RBRF implies there is a LN.lnClass = XCBR in the same LDevice (line ' + self.lineNumber.toString() + ')' )
    --:
    --    self.lnClass = 'RBRF' implies self.ParentLDevice.LN -> exists(l:LN | l.lnClass = 'XCBR' )

    -- If there is a LN.lnClass = RSYN, there must be a XCBR in the same LDevice
    --inv RSYN_implies_XCBR_in_LN
    --( 'LN.lnClass = RSYN implies there is a LN.lnClass = XCBR in the same LDevice (line ' + self.lineNumber.toString() + ')' )
    --:
    --    self.lnClass = 'RSYN' implies self.ParentLDevice.LN -> exists(l:LN | l.lnClass = 'XCBR' )
        
    -- If there is a LN.lnClass = CSWI, there must be a XCBR or a XSWI in the same LDevice
    --inv CSWI_implies_XCBR_or_XSWI_in_LN
    --( 'LN.lnClass = CSWI implies there is a LN.lnClass = XCBR or LN.lnClass = XSWI in the same LDevice (line ' + self.lineNumber.toString() + ')' )
    --:
    --    self.lnClass = 'CSWI' implies 
    --      (self.ParentLDevice.LN -> exists(l:LN | l.lnClass = 'XCBR' ) or self.ParentLDevice.LN -> exists(l:LN | l.lnClass = 'XSWI' ))

    -- If there is a LN.lnClass = PTRC, there must be a XCBR in the same LDevice
    --inv PTRC_implies_XCBR_in_LN
    --( 'LN.lnClass = PTRC implies there is a LN.lnClass = XCBR in the same LDevice (line ' + self.lineNumber.toString() + ')' )
    --:
    --    self.lnClass = 'PTRC' implies self.ParentLDevice.LN -> exists(l:LN | l.lnClass = 'XCBR' ) 

    -- If there is a LN.lnClass = CILO, there must be a XCBR or a XSWI in the same LDevice
    --inv CILO_implies_XCBR_or_XSWI_in_LN
    --( 'LN.lnClass = CILO implies there is a LN.lnClass = XCBR or LN.lnClass = XSWI in the same LDevice (line ' + self.lineNumber.toString() + ')' )
    --:
    --    self.lnClass = 'CILO' implies 
    --      (self.ParentLDevice.LN -> exists(l:LN | l.lnClass = 'XCBR' ) or self.ParentLDevice.LN -> exists(l:LN | l.lnClass = 'XSWI' ))
    inv LN_nothing
    :
        true
endpackage

