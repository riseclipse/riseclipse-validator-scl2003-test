/*
*************************************************************************
**  Copyright (c) 2016-2021 CentraleSupélec & EDF.
**  All rights reserved. This program and the accompanying materials
**  are made available under the terms of the Eclipse Public License v2.0
**  which accompanies this distribution, and is available at
**  https://www.eclipse.org/legal/epl-v20.html
** 
**  This file is part of the RiseClipse tool
**  
**  Contributors:
**      Computer Science Department, CentraleSupélec
**      EDF R&D
**  Contacts:
**      dominique.marcadet@centralesupelec.fr
**      aurelie.dehouck-neveu@edf.fr
**  Web site:
**      https://riseclipse.github.io/
*************************************************************************
*/

import scl: 'http://www.iec.ch/61850/2003/SCL'

import '../Helpers/BaseSimpleTypes.ocl'

package scl

context ConnectivityNode
-- extends LNodeContainer

    -- The name attribute is verified in Naming.ocl

    -- The pathName attribute shall be present
    inv ConnectivityNode_pathName_required
        ( 'ERROR:[RequiredAttributes] name attribute shall be present in ConnectivityNode (line ' + self.lineNumber.toString() + ')' )
    :
        self.pathName <> null

    -- The pathName attribute shall be valid
    inv ConnectivityNode_pathName_valid
        ( 'ERROR:[RequiredAttributes] name attribute shall be valid in ConnectivityNode (line ' + self.lineNumber.toString() + '). '
          + 'Current value is ' + self.pathName.toString()
        )
    :
        self.pathName <> null implies self.validSclRef( pathName )

    --  The Bay's name attribute identifies the ConnectivityNode instance within the
    --  bay; its pathName is an absolute reference within the SCL file. The
    --  pathname is build by all higher level references down to the connectivity
    --  nodes name, concatenated with the character “/”
    inv ConnectivityNode_pathName_value
        ( 'ERROR:[RequiredAttributes] pathName of ConnectivityNode shall be its path starting from Substation (line ' + self.lineNumber.toString() + '). '
          + 'Current value is '  + self.pathName + ', '
          + 'expected value is ' + self.ParentBay.ParentVoltageLevel.ParentSubstation.name
                           + '/' + self.ParentBay.ParentVoltageLevel.name
                           + '/' + self.ParentBay.name
                           + '/' + self.name
        )
    :
        self.pathName <> null
        implies
        self.pathName = self.ParentBay.ParentVoltageLevel.ParentSubstation.name
                + '/' + self.ParentBay.ParentVoltageLevel.name
                + '/' + self.ParentBay.name
                + '/' + self.name

endpackage

