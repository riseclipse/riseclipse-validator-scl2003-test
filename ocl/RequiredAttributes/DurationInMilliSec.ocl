/*
*************************************************************************
**  Copyright (c) 2016-2021 CentraleSupélec & EDF.
**  All rights reserved. This program and the accompanying materials
**  are made available under the terms of the Eclipse Public License v2.0
**  which accompanies this distribution, and is available at
**  https://www.eclipse.org/legal/epl-v20.html
** 
**  This file is part of the RiseClipse tool
**  
**  Contributors:
**      Computer Science Department, CentraleSupélec
**      EDF R&D
**  Contacts:
**      dominique.marcadet@centralesupelec.fr
**      aurelie.dehouck-neveu@edf.fr
**  Web site:
**      https://riseclipse.github.io/
*************************************************************************
*/

import scl: 'http://www.iec.ch/61850/2003/SCL'

package scl

context DurationInMilliSec
-- extends NONE

    -- The value shall be present
    inv DurationInMilliSec_value_required
        ( 'ERROR:[RequiredAttributes] value shall be present in DurationInMilliSec (line ' + self.lineNumber.toString() + ')' )
    :
        self.value <> null

    -- The value must be positive
    -- Note: the XSD does not force this (only decimal)
    inv DurationInMilliSec_value_valid
        ( 'ERROR:[RequiredAttributes] value shall be positive in DurationInMilliSec (line ' + self.lineNumber.toString() + '). '
          + 'Current value is ' + self.value.toString()
        )
    :
        self.value <> null implies self.value > 0

    -- If present, the unit attribute value shall be s
    inv DurationInMilliSec_unit_value_fixed
        ( 'ERROR:[RequiredAttributes] unit attribute shall be s in DurationInMilliSec (line ' + self.lineNumber.toString() + '). '
          + 'Current value is ' + self.unit.toString()
        )
    :
        self.unit <> null implies self.unit = 's'

    -- If present, the multiplier attribute value shall be m
    inv DurationInMilliSec_multiplier_value_fixed
        ( 'ERROR:[RequiredAttributes] multiplier attribute shall be milli in DurationInMilliSec (line ' + self.lineNumber.toString() + '). '
          + 'Current value is ' + self.multiplier.toString()
        )
    :
        self.multiplier <> null implies self.multiplier = UnitMultiplierEnum::milli


endpackage

