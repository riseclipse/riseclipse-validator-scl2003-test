/*
*************************************************************************
**  Copyright (c) 2016-2022 CentraleSupélec & EDF.
**  All rights reserved. This program and the accompanying materials
**  are made available under the terms of the Eclipse Public License v2.0
**  which accompanies this distribution, and is available at
**  https://www.eclipse.org/legal/epl-v20.html
** 
**  This file is part of the RiseClipse tool
**  
**  Contributors:
**      Computer Science Department, CentraleSupélec
**      EDF R&D
**  Contacts:
**      dominique.marcadet@centralesupelec.fr
**      aurelie.dehouck-neveu@edf.fr
**  Web site:
**      https://riseclipse.github.io/
*************************************************************************
*/

import scl: 'http://www.iec.ch/61850/2003/SCL'

import '../Helpers/BaseSimpleTypes.ocl'
import '../Helpers/Enums.ocl'

package scl

context ClientLN
-- extends NONE

    -- The apRef attribute shall be valid
    inv ClientLN_apRef_valid
        (   'ERROR;'
          + 'OCL/RequiredAttributes/ClientLN_apRef_valid;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'apRef attribute shall be valid in ClientLN. ' + 'Current value is ' + self.apRef.toString()
        )
    :
        self.apRef <> null implies self.validSclAccessPointName( apRef )

    --  Both, the iedName and ldInst (as specified in the attribute group agLDRef)
    --  shall be specified with non-zero length. If the reference is to an LN at a
    --  pure client access point, then the value of ldInst can be arbitrary
    --  (recommended: LD0).
    inv ClientLN_iedName_required
        (   'ERROR;'
          + 'OCL/RequiredAttributes/ClientLN_iedName_required;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'iedName attribute shall be present in ClientLN'
        )
    :
        self.iedName <> null

    inv ClientLN_iedName_valid
        (   'ERROR;'
          + 'OCL/RequiredAttributes/ClientLN_iedName_valid;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'iedName attribute shall be valid in ClientLN. ' + 'Current value is ' + self.iedName.toString()
        )
    :
        self.iedName <> null implies self.validSclIEDName( iedName )

    inv ClientLN_ldInst_required
        (   'ERROR;'
          + 'OCL/RequiredAttributes/ClientLN_ldInst_required;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'ldInst attribute shall present in ClientLN'
        )
    :
        self.ldInst <> null

    inv ClientLN_ldInst_valid
        (   'ERROR;'
          + 'OCL/RequiredAttributes/ClientLN_ldInst_valid;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'ldInst attribute shall be valid in ClientLN. ' + 'Current value is ' + self.ldInst.toString()
        )
    :
        self.ldInst <> null implies self.validSclLDInst( ldInst )

    -- lnClass required
    inv ClientLN_lnClass_required
        (   'ERROR;'
          + 'OCL/RequiredAttributes/ClientLN_lnClass_required;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'lnClass attribute shall present in ClientLN'
        )
    :
        self.lnClass <> null

    -- lnClass valid
    inv ClientLN_lnClass_valid
        (   'ERROR;'
          + 'OCL/RequiredAttributes/ClientLN_lnClass_valid;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'lnClass attribute shall be valid in ClientLN. ' + 'Current value is ' + self.lnClass.toString()
        )
    :
        self.lnClass <> null implies self.validSclLNClassEnum( lnClass )

    --  lnInst is required. If the LLN0 is referenced, the value is the empty
    --  string.
    inv ClientLN_lnInst_required
        (   'ERROR;'
          + 'OCL/RequiredAttributes/ClientLN_lnInst_required;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'lnInst attribute shall be present in ClientLN'
        )
    :
        self.lnInst <> null
        
    inv ClientLN_lnInst_valid
        (   'ERROR;'
          + 'OCL/RequiredAttributes/ClientLN_lnInst_valid;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'lnInst attribute shall be valid in ClientLN. ' + 'Current value is ' + self.lnInst.toString()
        )
    :
        self.lnInst <> null implies self.validSclLNInstOrEmpty( lnInst )

    inv ClientLN_lnInst_empty_for_LLN0
        (   'ERROR;'
          + 'OCL/RequiredAttributes/ClientLN_lnInst_empty_for_LLN0;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'lnInst attribute shall be empty for LLN0 in ClientLN. ' + 'Current value is ' + self.lnInst.toString()
        )
    :
        self.lnInst <> null implies if( self.lnClass = 'LLN0' ) then self.lnInst.size() = 0 else self.lnInst.size() > 0 endif
    
    --  Only the prefix is optional in cases where the referenced LN instance has
    --  no prefix (prefix value = empty string). If it is defined, it must have a
    --  non zero length.
    inv ClientLN_prefix_valid
        (   'ERROR;'
          + 'OCL/RequiredAttributes/ClientLN_prefix_valid;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'prefix attribute shall be valid in ClientLN. ' + 'Current value is ' + self.prefix.toString()
        )
    :
        self.prefix <> null implies self.validSclPrefix( prefix )
        

endpackage

