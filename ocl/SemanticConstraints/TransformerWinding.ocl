/*
*************************************************************************
**  Copyright (c) 2016-2022 CentraleSupélec & EDF.
**  All rights reserved. This program and the accompanying materials
**  are made available under the terms of the Eclipse Public License v2.0
**  which accompanies this distribution, and is available at
**  https://www.eclipse.org/legal/epl-v20.html
** 
**  This file is part of the RiseClipse tool
**  
**  Contributors:
**      Computer Science Department, CentraleSupélec
**      EDF R&D
**  Contacts:
**      dominique.marcadet@centralesupelec.fr
**      aurelie.dehouck-neveu@edf.fr
**  Web site:
**      https://riseclipse.github.io/
*************************************************************************
*/

import scl: 'http://www.iec.ch/61850/2003/SCL'

package scl

context TransformerWinding

    -- The TransformerWinding in PowerTransformer shall have unique name in SubEquipment, TapChanger, EqFunction (from SCL_Substation.xsd)
    inv TransformerWinding_unique_name_in_SubEquipment
        (   'ERROR;'
          + 'OCL/SemanticConstraints/TransformerWinding_unique_name_in_SubEquipment;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'Unique SubEquipment, TapChanger, EqFunction name in SubEquipment from AbstractConductingEquipment'
        )
    :
        self.oclContainer.oclIsTypeOf(PowerTransformer) implies 
        self.SubEquipment -> union(self.TapChanger -> union(self.EqFunction)) -> isUnique(n:Naming|n.name)

    -- The TapChanger in TransformerWinding shall have unique child name (from SCL_Substation.xsd)
    inv TransformerWinding_unique_name_of_TapChanger
        (   'ERROR;'
          + 'OCL/SemanticConstraints/TransformerWinding_unique_name_of_TapChanger;'
          + self.lineNumber.toString() + ';'
          + 'Unique child name of TapChanger in TransformerWinding'
        )
    :
        self.TapChanger -> isUnique( n : Naming | n.name )

endpackage

