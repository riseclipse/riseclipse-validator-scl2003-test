/*
*************************************************************************
**  Copyright (c) 2016-2022 CentraleSupélec & EDF.
**  All rights reserved. This program and the accompanying materials
**  are made available under the terms of the Eclipse Public License v2.0
**  which accompanies this distribution, and is available at
**  https://www.eclipse.org/legal/epl-v20.html
** 
**  This file is part of the RiseClipse tool
**  
**  Contributors:
**      Computer Science Department, CentraleSupélec
**      EDF R&D
**  Contacts:
**      dominique.marcadet@centralesupelec.fr
**      aurelie.dehouck-neveu@edf.fr
**  Web site:
**      https://riseclipse.github.io/
*************************************************************************
*/

import scl: 'http://www.iec.ch/61850/2003/SCL'

package scl

context SubNetwork

    -- Within a SubNetwork, there cannot be two ConnectedAP elements with the same
    -- combination of iedName and apName.
    -- may be modified after TISSUExxx - IOP2019
    inv SubNetwork_unique_ConnectedAP_combination
        (   'ERROR;'
          + 'OCL/SemanticConstraints/SubNetwork_unique_ConnectedAP_combination;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'ConnectedAP in SubNetwork shall have different combination of { iedName, apName }'
        )
    :
        self.ConnectedAP->isUnique( c : ConnectedAP | Sequence{ c.iedName, c.apName } )

     --  IP adresses shall be unique in a Subnetwork
    
    inv SubNetwork_IP_unique
        (   'ERROR;'
          + 'OCL/SemanticConstraints/SubNetwork_IP_unique;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'IP Addresses shall be unique in a Subnetwork'
        )
    :
        -- self.ConnectedAP.Address means self.ConnectedAP->collect( c : ConnectedAP | c.Address ))
        -- If Address is missing in ConnectedAP (it should not, but it may happen), null is added in result collection
        -- and applying after .P (which means ->collect( a : Address | a.P )) will trigger an execution error
        self.ConnectedAP.Address->select( a : Address | a <> null )
                            .P->select  ( ip : P | ip.type = 'IP' )
                              ->isUnique( ip : P | ip.value ) 
        
endpackage

