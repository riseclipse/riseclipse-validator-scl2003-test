/*
*************************************************************************
**  Copyright (c) 2016-2022 CentraleSupélec & EDF.
**  All rights reserved. This program and the accompanying materials
**  are made available under the terms of the Eclipse Public License v2.0
**  which accompanies this distribution, and is available at
**  https://www.eclipse.org/legal/epl-v20.html
** 
**  This file is part of the RiseClipse tool
**  
**  Contributors:
**      Computer Science Department, CentraleSupélec
**      EDF R&D
**  Contacts:
**      dominique.marcadet@centralesupelec.fr
**      aurelie.dehouck-neveu@edf.fr
**  Web site:
**      https://riseclipse.github.io/
*************************************************************************
*/

import scl: 'http://www.iec.ch/61850/2003/SCL'

package scl

context DOI
        
    -- The DOI in AnyLN shall have unique DAI and SDI ix and name combination (from SCL_IED.xsd)
    inv DOI_unique_DAI_SDI_ix_name_in_DOI_from_AnyLN
        (   'ERROR;'
          + 'OCL/SemanticConstraints/DOI_unique_DAI_SDI_ix_name_in_DOI_from_AnyLN;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'Unique DAI and SDI ix and name combination in DOI from AnyLN'
        )
    :
       let dai = self.DAI -> collect( d : DAI | Tuple{ ix:Integer=d.ix, name:String=d.name } ),
           sdi = self.SDI -> collect( s : SDI | Tuple{ ix:Integer=s.ix, name:String=s.name } )
       in
       dai -> includingAll( sdi ) -> isUnique( ix_name_tuple | ix_name_tuple )
       
    -- The DOI in AnyLN must have a reference to a DO, that is, the AnyLN that contains the DOI must reference a valid LNType
    -- The consistency of the reference is already established in AnyLNImpl.java
    inv DOI_AnyLN_LNType_reference
        (   'ERROR;'
          + 'OCL/SemanticConstraints/DOI_AnyLN_LNType_reference;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'AnyLN with DOI must refer to a LNodeType'
        )
    :
        self.ParentAnyLN.RefersToLNodeType <> null 

    -- a DOI must refer an existing DO in DataTypeTemplate section
    inv DOI_RefersToDO
        (   'ERROR;'
          + 'OCL/SemanticConstraints/DOI_RefersToDO;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'DOI (name=' + self.name.toString() + ')  does not refer an existing DO in DataTypeTemplates section'
        )
    :
        self.RefersToDO <> null


endpackage

