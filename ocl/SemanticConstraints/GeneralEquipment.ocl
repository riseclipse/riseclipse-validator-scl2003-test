/*
*************************************************************************
**  Copyright (c) 2016-2022 CentraleSupélec & EDF.
**  All rights reserved. This program and the accompanying materials
**  are made available under the terms of the Eclipse Public License v2.0
**  which accompanies this distribution, and is available at
**  https://www.eclipse.org/legal/epl-v20.html
** 
**  This file is part of the RiseClipse tool
**  
**  Contributors:
**      Computer Science Department, CentraleSupélec
**      EDF R&D
**  Contacts:
**      dominique.marcadet@centralesupelec.fr
**      aurelie.dehouck-neveu@edf.fr
**  Web site:
**      https://riseclipse.github.io/
*************************************************************************
*/

import scl: 'http://www.iec.ch/61850/2003/SCL'

package scl

context GeneralEquipment
        
    -- The GeneralEquipment in Function shall have unique child name (from SCL_Substation.xsd)
    inv unique_name_in_GeneralEquipment_from_Function
        (   'ERROR;'
          + 'OCL/SemanticConstraints/unique_name_in_GeneralEquipment_from_Function;'
          + self.lineNumber.toString() + ';'
          + 'Unique child name in GeneralEquipment from Function'
        )
    :
        self.oclContainer.oclIsTypeOf(Function) implies self.oclContents -> isUnique(n:Naming|n.name)
        
    -- The GeneralEquipment in SubFunction shall have unique child name (from SCL_Substation.xsd)
    inv unique_name_in_GeneralEquipment_from_SubFunction
        (   'ERROR;'
          + 'OCL/SemanticConstraints/unique_name_in_GeneralEquipment_from_SubFunction;'
          + self.lineNumber.toString() + ';'
          + 'Unique child name in GeneralEquipment from SubFunction'
        )
    :
        self.oclContainer.oclIsTypeOf(SubFunction) implies self.oclContents -> isUnique(n:Naming|n.name)
        
    -- The GeneralEquipment in AbstractEqFuncSubFunc shall have unique child name (from SCL_Substation.xsd)
    inv unique_name_in_GeneralEquipment_from_AbstractEqFuncSubFunc
        (   'ERROR;'
          + 'OCL/SemanticConstraints/unique_name_in_GeneralEquipment_from_AbstractEqFuncSubFunc;'
          + self.lineNumber.toString() + ';'
          + 'Unique child name in GeneralEquipment from AbstractEqFuncSubFunc'
        )
    :
        self.oclContainer.oclIsKindOf(AbstractEqFuncSubFunc) implies self.oclContents -> isUnique(n:Naming|n.name)
        
    -- The GeneralEquipment in GeneralEquipmentContainer shall have unique child name (from SCL_Substation.xsd)
    inv unique_name_in_GeneralEquipment_from_GeneralEquipmentContainer
        (   'ERROR;'
          + 'OCL/SemanticConstraints/unique_name_in_GeneralEquipment_from_GeneralEquipmentContainer;'
          + self.lineNumber.toString() + ';'
          + 'Unique child name in GeneralEquipment from GeneralEquipmentContainer'
        )
    :
        self.oclContainer.oclIsKindOf(GeneralEquipmentContainer) implies self.oclContents -> isUnique(n:Naming|n.name)
        
    -- The GeneralEquipment in EquipmentContainer shall have unique child name (from SCL_Substation.xsd)
    inv unique_name_in_GeneralEquipment_from_EquipmentContainer
        (   'ERROR;'
          + 'OCL/SemanticConstraints/unique_name_in_GeneralEquipment_from_EquipmentContainer;'
          + self.lineNumber.toString() + ';'
          + 'Unique child name in GeneralEquipment from EquipmentContainer'
        )
    :
        self.oclContainer.oclIsKindOf(EquipmentContainer) implies self.oclContents -> isUnique(n:Naming|n.name)


endpackage

