/*
*************************************************************************
**  Copyright (c) 2016-2022 CentraleSupélec & EDF.
**  All rights reserved. This program and the accompanying materials
**  are made available under the terms of the Eclipse Public License v2.0
**  which accompanies this distribution, and is available at
**  https://www.eclipse.org/legal/epl-v20.html
** 
**  This file is part of the RiseClipse tool
**  
**  Contributors:
**      Computer Science Department, CentraleSupélec
**      EDF R&D
**  Contacts:
**      dominique.marcadet@centralesupelec.fr
**      aurelie.dehouck-neveu@edf.fr
**  Web site:
**      https://riseclipse.github.io/
*************************************************************************
*/

import scl: 'http://www.iec.ch/61850/2003/SCL'

package scl

context ClientLN

    -- a ClientLN must refer an existing LN
    inv ClientLN_RefersToLNodeType
        (   'ERROR;'
          + 'OCL/SemanticConstraints/ClientLN_RefersToLNodeType;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'ClientLN does not refer an existing LN'
        )
    :
        self.RefersToAnyLN <> null    
   
     
    -- Checks that the IED sending the Report is connected to the same subNetwork that the receiver IED
     inv ClientLN_Sender_and_receiver_not_in_same_subnetwork
        (   'ERROR;'
          + 'OCL/SemanticConstraints/ClientLN_Sender_and_receiver_not_in_same_subnetwork;'
          + self.filename + ';'
          + self.lineNumber.toString() + ';'
          + 'Sender and receiver of the Report are not in the same Subnetwork'
        )
    :
            if (self.ParentRptEnabled.ParentReportControl.ParentAnyLN.oclIsTypeOf(LN0))
            then (
            self.ParentRptEnabled.ParentReportControl.ParentAnyLN.oclAsType(LN0).ParentLDevice.ParentServer.ParentAccessPoint.ReferredByConnectedAP.ParentSubNetwork.ConnectedAP
                                -> select (c : ConnectedAP | c.iedName = self.iedName and (if self.apRef <> null then c.apName = self.apRef else true endif)) 
                                -> size() = 1
            )
            else(
                if (self.ParentRptEnabled.ParentReportControl.ParentAnyLN.oclIsTypeOf(LN))
                then (
                self.ParentRptEnabled.ParentReportControl.ParentAnyLN.oclAsType(LN).ParentLDevice.ParentServer.ParentAccessPoint.ReferredByConnectedAP.ParentSubNetwork.ConnectedAP
                                -> select (c : ConnectedAP | c.iedName = self.iedName and (if self.apRef <> null then c.apName = self.apRef else true endif)) 
                                -> size() = 1
                )
                else true           
                endif
            )
            endif

endpackage

