/*
*************************************************************************
**  Copyright (c) 2016-2021 CentraleSupélec & EDF.
**  All rights reserved. This program and the accompanying materials
**  are made available under the terms of the Eclipse Public License v2.0
**  which accompanies this distribution, and is available at
**  https://www.eclipse.org/legal/epl-v20.html
** 
**  This file is part of the RiseClipse tool
**  
**  Contributors:
**      Computer Science Department, CentraleSupélec
**      EDF R&D
**  Contacts:
**      dominique.marcadet@centralesupelec.fr
**      aurelie.dehouck-neveu@edf.fr
**  Web site:
**      https://riseclipse.github.io/
*************************************************************************
*/

import scl: 'http://www.iec.ch/61850/2003/SCL'

package scl

context LogControl

    --  The datSet attribute shall contain a valid data set reference, or be
    --  missing completely. The data set reference is the LN relative name only,
    --  i.e. data set and control block shall reside in the same LN.
    -- Note: an explicit link to DataSet has been set up by RiseClipse
    inv LogControl_datSet_valid_reference
        ( 'ERROR:[SemanticConstraints] datSet attribute shall reference a valid DataSet in LLN0 in GSEControl (line ' + self.lineNumber.toString() + ')' )
    :
        self.datSet <> null implies self.ParentAnyLN.DataSet -> exists( d : DataSet | self.datSet = d.name )
        
    -- The LD reference shall point to a valid, defined LD
    inv LogControl_ldInst_valid_reference
        ( 'ERROR:[SemanticConstraints] ldInst attribute shall reference a valid defined LDevice (line ' + self.lineNumber.toString() + ')' )
    :
        self.ldInst <> null implies
            if (self.RefersToAnyLN <> null) then
                self.RefersToAnyLN.oclContainer -> exists(l:LDevice | l.inst= self.ldInst)
            else
                true
            endif   

    -- The prefix of the referenced LN shall be valid
    inv LogControl_prefix_valid_reference
        ( 'ERROR:[SemanticConstraints] prefix attribute shall reference a valid prefix in LN (line ' + self.lineNumber.toString() + ')' )
    :
        self.prefix <> null implies
            if (self.RefersToAnyLN <> null) then
                if (self.RefersToAnyLN.oclIsTypeOf(LN)) then
                    self.RefersToAnyLN -> exists(l:LN | l.prefix= self.prefix)
                else
                    true
                endif
            else
                true
            endif  
            
            
    -- The lnCLass of the referenced LN is validated in LogControlImpl.java
    -- The lnInst of the referenced LN is validated in LogControlImpl.java
            
    -- a LogControl must refer an existing LN
    inv LogControl_RefersToAnyLN
    ( 'ERROR:[SemanticConstraints] LogControl (line ' + self.lineNumber.toString() + ') does not refer an existing Logical Node' )
    :
        self.RefersToAnyLN <> null  
    
    -- a LogControl must refer an existing Log
    inv LogControl_RefersToLog
    ( 'ERROR:[SemanticConstraints] LogControl (line ' + self.lineNumber.toString() + ') does not refer an existing Log' )
    :
        self.RefersToLog <> null            
            
            
            
endpackage

