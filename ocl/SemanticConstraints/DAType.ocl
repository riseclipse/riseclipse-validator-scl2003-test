/*
*************************************************************************
**  Copyright (c) 2016-2022 CentraleSupélec & EDF.
**  All rights reserved. This program and the accompanying materials
**  are made available under the terms of the Eclipse Public License v2.0
**  which accompanies this distribution, and is available at
**  https://www.eclipse.org/legal/epl-v20.html
** 
**  This file is part of the RiseClipse tool
**  
**  Contributors:
**      Computer Science Department, CentraleSupélec
**      EDF R&D
**  Contacts:
**      dominique.marcadet@centralesupelec.fr
**      aurelie.dehouck-neveu@edf.fr
**  Web site:
**      https://riseclipse.github.io/
*************************************************************************
*/

import scl: 'http://www.iec.ch/61850/2003/SCL'

package scl

context DAType

    -- The DAType in DataTypeTemplates shall have unique BDA name (from SCL_DataTypeTemplates.xsd)
    inv unique_BDA_name_in_DAType_from_DataTypeTemplates
        (   'ERROR;'
          + 'OCL/SemanticConstraints/unique_BDA_name_in_DAType_from_DataTypeTemplates;'
          + self.lineNumber.toString() + ';'
          + 'Unique BDA name in DAType from DataTypeTemplates'
        )
    :
        self.oclContainer.oclIsTypeOf(DataTypeTemplates) implies
        self.BDA -> isUnique(b:BDA|b.name)
        
    -- The DAType in DataTypeTemplates shall have unique ProtNs type (from SCL_DataTypeTemplates.xsd)
    inv unique_ProtNs_type_in_DAType_from_DataTypeTemplates
        (   'ERROR;'
          + 'OCL/SemanticConstraints/unique_ProtNs_type_in_DAType_from_DataTypeTemplates;'
          + self.lineNumber.toString() + ';'
          + 'Unique ProtNs type in DAType from DataTypeTemplates'
        )
    :
        self.oclContainer.oclIsTypeOf(DataTypeTemplates) implies
        self.ProtNs -> isUnique(p:ProtNs|p.type)


endpackage

